AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"


Parameters:
  InstanceType:
    Type: String
    Description: Instance type used for the development machine
  OperatingSystem:
    Type: String
    Description: Operating system for the development machine
    Default: ubuntu
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: SSH key to connect to the development machine


Mappings:
  ImageId:
    # Taken from https://cloud-images.ubuntu.com/locator/ec2/
    eu-north-1:
      ubuntu: ami-0b321105d199c4774
    eu-west-1:
      ubuntu: ami-0665161784d935578
    us-east-1:
      ubuntu: ami-0b6b1f8f449568786
    us-west-1:
      ubuntu: ami-0bad1f1c6d0baa1c7
    us-west-2:
      ubuntu: ami-02c8040256f30fb45


Globals:
  Function:
    Runtime: python3.8
    Handler: main.handler
    Timeout: 60


Resources:
  SpotInstanceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/spot_instance/
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - ec2:RunInstances
                - ec2:DeleteInstances
              Resource: "*"

  SpotInstance:
    Type: Custom::SpotInstance
    Properties:
      ServiceToken: !GetAtt SpotInstanceFunction.Arn
      ImageId: !FindInMap [ImageId, !Ref "AWS::Region", !Ref OperatingSystem]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupId: !GetAtt SecurityGroup.GroupId
      UserData: |
        #!/bin/bash

        apt-get update -y
        shutdown -h now
    
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: devbox security group

  StartFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/start_instance/
      Environment:
        Variables:
          INSTANCE_ID: !Ref SpotInstance
          SECURITY_GROUP_ID: !GetAtt SecurityGroup.GroupId
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - ec2:DescribeInstances
                - ec2:DescribeSecurityGroups
              Resource: "*"
            - Effect: Allow
              Action:
                - ec2:StartInstances
              Resource: !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${SpotInstance}"
            - Effect: Allow
              Action:
                - ec2:AuthorizeSecurityGroupIngress
              Resource: !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:security-group/${SecurityGroup.GroupId}"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: PUT
            Auth:
              Authorizer: AWS_IAM

  StatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/status/
      Environment:
        Variables:
          INSTANCE_ID: !Ref SpotInstance
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - ec2:DescribeInstances
              Resource: "*"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
            Auth:
              Authorizer: AWS_IAM


  StopFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/stop/
      Environment:
        Variables:
          SECURITY_GROUP_ID: !GetAtt SecurityGroup.GroupId
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - ec2:DescribeSecurityGroups
              Resource: "*"
            - Effect: Allow
              Action:
                - ec2:RevokeSecurityGroupIngress
              Resource: !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:security-group/${SecurityGroup.GroupId}"
      Events:
        InstanceStopped:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
                - aws.ec2
              detail-type:
                - "EC2 Instance State-change Notification"
              detail:
                instance-id:
                  - !Ref SpotInstance
                state:
                  - stopped



Outputs:
  ApiEndpoint:
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"